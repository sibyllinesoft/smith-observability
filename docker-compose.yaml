services:
  openai-stub:
    profiles: ["test"]
    image: node:20-slim
    working_dir: /app
    environment:
      OPENAI_STUB_PORT: 8080
    command:
      - node
      - /app/openai-stub.mjs
    volumes:
      - ./test/support/openai-stub.mjs:/app/openai-stub.mjs:ro
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "fetch('http://127.0.0.1:8080/healthz').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))"
        ]
      interval: 2s
      timeout: 2s
      retries: 10

  bifrost:
    build:
      context: ./docker/bifrost
    ports:
      - "16080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      BIFROST_HOST: 0.0.0.0
      BIFROST_PORT: 8080
      BIFROST_LOG_LEVEL: debug
      BIFROST_LOG_STYLE: json
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL:-https://api.openai.com}
    volumes:
      - bifrost_data:/srv/bifrost
      - ${SMITH_OBSERVABILITY_BIFROST_CONFIG:-./bifrost.config.json}:/etc/bifrost/config.json:ro
    depends_on:
      otel-collector:
        condition: service_started

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.90.1
    command:
      - "--config=/etc/otelcol-contrib/otel-collector.yaml"
    ports:
      - "13317:4317"
      - "13318:4318"
    volumes:
      - ./observability/otel-collector.yaml:/etc/otelcol-contrib/otel-collector.yaml:ro
    environment:
      CLICKHOUSE_ENDPOINT: http://clickhouse:8123
      CLICKHOUSE_DATABASE: otel
      CLICKHOUSE_USERNAME: default
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-}
    depends_on:
      clickhouse:
        condition: service_healthy

  clickhouse:
    image: clickhouse/clickhouse-server:23.10
    ports:
      - "13123:8123"
      - "13900:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./observability/clickhouse-init.sql:/docker-entrypoint-initdb.d/00-init.sql:ro
      - ./observability/clickhouse-config/cors.xml:/etc/clickhouse-server/config.d/cors.xml:ro
    environment:
      CLICKHOUSE_DB: otel
      CLICKHOUSE_USER: default
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    healthcheck:
      test: ["CMD-SHELL", "clickhouse-client --query 'SELECT 1'"]
      interval: 5s
      timeout: 5s
      retries: 12

volumes:
  bifrost_data:
  clickhouse_data:
